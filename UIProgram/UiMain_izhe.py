# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UiMain.ui'
# 表示这个代码是从UiMain.ui文件生成的实现表单
#
# Created by: PyQt5 UI code generator 5.15.9
# 表明代码由PyQt5 UI代码生成器5.15.9版本创建
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
# 警告：对此文件的任何手动更改将在再次运行pyuic5时丢失，除非你知道自己在做什么


from PyQt5 import QtCore, QtGui, QtWidgets
# 导入PyQt5的核心模块：
# QtCore：包含非GUI功能的核心类
# QtGui：提供窗口系统集成、事件处理、2D图形、基本图像和字体等
# QtWidgets：包含用于创建经典桌面风格UI的类


class Ui_MainWindow(object):
    # 定义一个名为Ui_MainWindow的类，用于设置主窗口界面
    def setupUi(self, MainWindow):
        # 定义setupUi方法，接收MainWindow参数，用于设置UI组件
        MainWindow.setObjectName("MainWindow")
        # 设置窗口对象名为"MainWindow"
        # MainWindow.resize(1250, 830)
        MainWindow.resize(1500, 900)
        # 注释掉的原始窗口大小(1250, 830)，改为调整窗口大小为1500x900
        #设置窗口大小
        # MainWindow.setMinimumSize(QtCore.QSize(1250, 830))
        # MainWindow.setMaximumSize(QtCore.QSize(1250, 830))
        MainWindow.setMinimumSize(QtCore.QSize(1500,900))
        MainWindow.setMaximumSize(QtCore.QSize(1500,900))
        # 注释掉的原始最小和最大窗口尺寸，设置新的最小和最大窗口尺寸为1500x900
        # 这样设置后窗口大小就固定为1500x900，用户无法调整大小

        icon = QtGui.QIcon()
        # 创建一个QIcon对象用于设置窗口图标
        icon.addPixmap(QtGui.QPixmap(":/icons/ui_imgs/icons/目标检测.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        # 为图标添加一个像素图，使用资源文件中的图标，设置Normal状态和Off状态
        MainWindow.setWindowIcon(icon)
        # 设置窗口图标为上面创建的图标
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        # 创建一个中央窗口部件作为主窗口的中央部件
        self.centralwidget.setObjectName("centralwidget")
        # 设置中央窗口部件的对象名
        self.frame = QtWidgets.QFrame(self.centralwidget)
        # 在中央窗口部件中创建一个框架(frame)
        self.frame.setGeometry(QtCore.QRect(10, 100, 791, 711))
        # 设置框架的几何形状：位置(10,100)，大小791x711
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        # 设置框架形状为带样式的面板
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置框架阴影为凸起效果
        self.frame.setObjectName("frame")
        # 设置框架的对象名
        self.frame_2 = QtWidgets.QFrame(self.frame)
        # 在第一个框架中创建第二个框架(frame_2)
        self.frame_2.setGeometry(QtCore.QRect(10, 0, 771, 481))
        # 设置第二个框架的几何形状：位置(10,0)，大小771x481
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        # 设置第二个框架形状为带样式的面板
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置第二个框架阴影为凸起效果
        self.frame_2.setObjectName("frame_2")
        # 设置第二个框架的对象名
        self.label_show = QtWidgets.QLabel(self.frame_2)
        # 在第二个框架中创建一个标签，用于显示图像
        self.label_show.setGeometry(QtCore.QRect(0, 0, 770, 480))
        # 设置标签的几何形状：位置(0,0)，大小770x480
        self.label_show.setMinimumSize(QtCore.QSize(770, 480))
        # 设置标签的最小尺寸为770x480
        self.label_show.setMaximumSize(QtCore.QSize(770, 480))
        # 设置标签的最大尺寸为770x480
        self.label_show.setStyleSheet("border-image: url(:/icons/ui_imgs/icons/toukui.png);")
        # 设置标签的样式表，使用资源文件中的图片作为边框图像
        self.label_show.setText("")
        # 设置标签的文本为空
        self.label_show.setObjectName("label_show")
        # 设置标签的对象名
        self.frame_3 = QtWidgets.QFrame(self.frame)
        # 在第一个框架中创建第三个框架(frame_3)
        self.frame_3.setGeometry(QtCore.QRect(10, 480, 771, 221))
        # 设置第三个框架的几何形状：位置(10,480)，大小771x221
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        # 设置第三个框架形状为带样式的面板
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置第三个框架阴影为凸起效果
        self.frame_3.setObjectName("frame_3")
        # 设置第三个框架的对象名
        self.groupBox_3 = QtWidgets.QGroupBox(self.frame_3)
        # 在第三个框架中创建一个分组框(groupBox_3)
        self.groupBox_3.setGeometry(QtCore.QRect(0, 10, 771, 221))
        # 设置分组框的几何形状：位置(0,10)，大小771x221
        font = QtGui.QFont()
        # 创建一个字体对象
        font.setFamily("华文楷体")
        # 设置字体族为"华文楷体"
        font.setPointSize(16)
        # 设置字体大小为16点
        self.groupBox_3.setFont(font)
        # 为分组框设置上面定义的字体
        self.groupBox_3.setObjectName("groupBox_3")
        # 设置分组框的对象名
        self.tableWidget = QtWidgets.QTableWidget(self.groupBox_3)
        # 在分组框中创建一个表格部件
        self.tableWidget.setGeometry(QtCore.QRect(10, 30, 751, 181))
        # 设置表格部件的几何形状：位置(10,30)，大小751x181
        font = QtGui.QFont()
        # 创建一个新的字体对象
        font.setFamily("华文楷体")
        # 设置字体族为"华文楷体"
        font.setPointSize(14)
        # 设置字体大小为14点
        self.tableWidget.setFont(font)
        # 为表格部件设置上面定义的字体
        self.tableWidget.setObjectName("tableWidget")
        # 设置表格部件的对象名
        self.tableWidget.setColumnCount(5)
        # 设置表格的列数为5
        self.tableWidget.setRowCount(0)
        # 设置表格的行数为0
        item = QtWidgets.QTableWidgetItem()
        # 创建一个表格项目对象
        self.tableWidget.setHorizontalHeaderItem(0, item)
        # 设置表格的第0列的水平头部项目
        item = QtWidgets.QTableWidgetItem()
        # 创建另一个表格项目对象
        self.tableWidget.setHorizontalHeaderItem(1, item)
        # 设置表格的第1列的水平头部项目
        item = QtWidgets.QTableWidgetItem()
        # 创建另一个表格项目对象
        self.tableWidget.setHorizontalHeaderItem(2, item)
        # 设置表格的第2列的水平头部项目
        item = QtWidgets.QTableWidgetItem()
        # 创建另一个表格项目对象
        self.tableWidget.setHorizontalHeaderItem(3, item)
        # 设置表格的第3列的水平头部项目
        item = QtWidgets.QTableWidgetItem()
        # 创建另一个表格项目对象
        self.tableWidget.setHorizontalHeaderItem(4, item)
        # 设置表格的第4列的水平头部项目
        self.frame_4 = QtWidgets.QFrame(self.centralwidget)
        # 在中央窗口部件中创建第四个框架(frame_4)
        self.frame_4.setGeometry(QtCore.QRect(810, 100, 431, 711))
        # 设置第四个框架的几何形状：位置(810,100)，大小431x711
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        # 设置第四个框架形状为带样式的面板
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置第四个框架阴影为凸起效果
        self.frame_4.setObjectName("frame_4")
        # 设置第四个框架的对象名
        self.groupBox = QtWidgets.QGroupBox(self.frame_4)
        # 在第四个框架中创建一个分组框(groupBox)
        self.groupBox.setGeometry(QtCore.QRect(0, 0, 431, 171))
        # 设置分组框的几何形状：位置(0,0)，大小431x171
        font = QtGui.QFont()
        # 创建一个新的字体对象
        font.setFamily("华文楷体")
        # 设置字体族为"华文楷体"
        font.setPointSize(16)
        # 设置字体大小为16点
        self.groupBox.setFont(font)
        # 为分组框设置上面定义的字体
        self.groupBox.setObjectName("groupBox")
        # 设置分组框的对象名
        self.PiclineEdit = QtWidgets.QLineEdit(self.groupBox)
        # 在分组框中创建一个单行文本编辑框，用于显示图片文件路径
        self.PiclineEdit.setGeometry(QtCore.QRect(70, 40, 311, 31))
        # 设置单行文本编辑框的几何形状：位置(70,40)，大小311x31
        self.PiclineEdit.setInputMask("")
        # 设置输入掩码为空
        self.PiclineEdit.setObjectName("PiclineEdit")
        # 设置单行文本编辑框的对象名
        self.VideolineEdit = QtWidgets.QLineEdit(self.groupBox)
        # 在分组框中创建另一个单行文本编辑框，用于显示视频文件路径
        self.VideolineEdit.setGeometry(QtCore.QRect(70, 80, 311, 31))
        # 设置单行文本编辑框的几何形状：位置(70,80)，大小311x31
        self.VideolineEdit.setObjectName("VideolineEdit")
        # 设置单行文本编辑框的对象名
        self.CapBtn = QtWidgets.QPushButton(self.groupBox)
        # 在分组框中创建一个按钮，用于控制摄像头
        self.CapBtn.setGeometry(QtCore.QRect(30, 120, 30, 30))
        # 设置按钮的几何形状：位置(30,120)，大小30x30
        self.CapBtn.setStyleSheet("border-image: url(:/icons/ui_imgs/icons/camera.png);")
        # 设置按钮的样式表，使用资源文件中的相机图标作为边框图像
        self.CapBtn.setText("")
        # 设置按钮的文本为空
        self.CapBtn.setObjectName("CapBtn")
        # 设置按钮的对象名
        self.PicBtn = QtWidgets.QPushButton(self.groupBox)
        # 在分组框中创建一个按钮，用于选择图片
        self.PicBtn.setGeometry(QtCore.QRect(30, 40, 30, 30))
        # 设置按钮的几何形状：位置(30,40)，大小30x30
        self.PicBtn.setStyleSheet("border-image: url(:/icons/ui_imgs/icons/img.png);")
        # 设置按钮的样式表，使用资源文件中的图片图标作为边框图像
        self.PicBtn.setText("")
        # 设置按钮的文本为空
        self.PicBtn.setObjectName("PicBtn")
        # 设置按钮的对象名
        self.VideoBtn = QtWidgets.QPushButton(self.groupBox)
        # 在分组框中创建一个按钮，用于选择视频
        self.VideoBtn.setGeometry(QtCore.QRect(30, 80, 30, 30))
        # 设置按钮的几何形状：位置(30,80)，大小30x30
        self.VideoBtn.setStyleSheet("border-image: url(:/icons/ui_imgs/icons/video.png);")
        # 设置按钮的样式表，使用资源文件中的视频图标作为边框图像
        self.VideoBtn.setText("")
        # 设置按钮的文本为空
        self.VideoBtn.setObjectName("VideoBtn")
        # 设置按钮的对象名
        self.CaplineEdit = QtWidgets.QLineEdit(self.groupBox)
        # 在分组框中创建一个单行文本编辑框，用于显示摄像头状态
        self.CaplineEdit.setGeometry(QtCore.QRect(70, 120, 311, 31))
        # 设置单行文本编辑框的几何形状：位置(70,120)，大小311x31
        self.CaplineEdit.setObjectName("CaplineEdit")
        # 设置单行文本编辑框的对象名
        self.FilesBtn = QtWidgets.QPushButton(self.groupBox)
        # 在分组框中创建一个按钮，用于打开文件
        self.FilesBtn.setGeometry(QtCore.QRect(390, 40, 30, 30))
        # 设置按钮的几何形状：位置(390,40)，大小30x30
        self.FilesBtn.setStyleSheet("border-image: url(:/icons/ui_imgs/icons/folder.png);")
        # 设置按钮的样式表，使用资源文件中的文件夹图标作为边框图像
        self.FilesBtn.setText("")
        # 设置按钮的文本为空
        self.FilesBtn.setObjectName("FilesBtn")
        # 设置按钮的对象名
        self.groupBox_2 = QtWidgets.QGroupBox(self.frame_4)
        # 在第四个框架中创建另一个分组框(groupBox_2)
        self.groupBox_2.setGeometry(QtCore.QRect(0, 180, 431, 371))
        # 设置分组框的几何形状：位置(0,180)，大小431x371
        font = QtGui.QFont()
        # 创建一个新的字体对象
        font.setFamily("华文楷体")
        # 设置字体族为"华文楷体"
        font.setPointSize(16)
        # 设置字体大小为16点
        self.groupBox_2.setFont(font)
        # 为分组框设置上面定义的字体
        self.groupBox_2.setObjectName("groupBox_2")
        # 设置分组框的对象名
        self.frame_6 = QtWidgets.QFrame(self.groupBox_2)
        # 在第二个分组框中创建第六个框架(frame_6)
        self.frame_6.setGeometry(QtCore.QRect(0, 190, 431, 171))
        # 设置第六个框架的几何形状：位置(0,190)，大小431x171
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        # 设置第六个框架形状为带样式的面板
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        # 设置第六个框架阴影为凸起效果
        self.frame_6.setObjectName("frame_6")
        # 设置第六个框架的对象名
        self.label_4 = QtWidgets.QLabel(self.frame_6)
        # 在第六个框架中创建一个标签
        self.label_4.setGeometry(QtCore.QRect(10, 10, 131, 41))
        # 设置标签的几何形状：位置(10,10)，大小131x41
        font = QtGui.QFont()
        # 创建一个新的字体对象
        font.setFamily("华文楷体")
        # 设置字体族为"华文楷体"
        font.setPointSize(16)
        # 设置字体大小为16点
        self.label_4.setFont(font)
        # 为标签设置上面定义的字体
        self.label_4.setStyleSheet("")
        # 设置标签的样式表为空
        self.label_4.setObjectName("label_4")
        # 设置标签的对象名
        self.layoutWidget = QtWidgets.QWidget(self.frame_6)
        # 在第六个框架中创建一个布局部件
        self.layoutWidget.setGeometry(QtCore.QRect(20, 60, 161, 37))
        # 设置布局部件的几何形状：位置(20,60)，大小161x37
        self.layoutWidget.setObjectName("layoutWidget")
        # 设置布局部件的对象名
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget)
        # 为布局部件创建一个水平布局
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        # 设置布局的内容边距为0
        self.horizontalLayout.setObjectName("horizontalLayout")
        # 设置水平布局的对象名
        self.label_6 = QtWidgets.QLabel(self.layoutWidget)
        # 在布局部件中创建一个标签
        font = QtGui.QFont()
        # 创建一个新的字体对象
        font.setFamily("华文楷体")
        # 设置字体族为"华文楷体"
        font.setPointSize(16)
        # 设置字体大小为16点
        font.setBold(False)
        # 设置字体不加粗
        font.setWeight(50)
        # 设置字体权重为50(普通)
        self.label_6.setFont(font)
        # 为标签设置上面定义的字体
        self.label_6.setObjectName("label_6")
        # 设置标签的对象名
        self.horizontalLayout.addWidget(self.label_6)
        # 将标签添加到水平布局中
        self.label_xmin = QtWidgets.QLabel(self.layoutWidget)
        # 在布局部件中创建另一个标签，用于显示x最小值
        palette = QtGui.QPalette()
        # 创建一个调色板对象
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        # 创建一个红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)
        # 设置画刷样式为实心图案
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        # 为活动状态的窗口文本设置红色画刷
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        # 再次创建一个红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)
        # 设置画刷样式为实心图案
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        # 为非活动状态的窗口文本设置红色画刷
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        # 创建一个灰色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)
        # 设置画刷样式为实心图案
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        # 为禁用状态的窗口文本设置灰色画刷
        self.label_xmin.setPalette(palette)
        # 为标签设置上面定义的调色板
        font = QtGui.QFont()
        # 创建一个新的字体对象
        font.setFamily("Arial")
        # 设置字体族为"Arial"
        font.setPointSize(16)
        # 设置字体大小为16点
        font.setBold(True)
        # 设置字体加粗
        font.setWeight(75)
        # 设置字体权重为75(加粗)
        self.label_xmin.setFont(font)
        # 为标签设置上面定义的字体
        self.label_xmin.setText("")
        # 设置标签的文本为空
        self.label_xmin.setObjectName("label_xmin")
        # 设置标签的对象名
        self.horizontalLayout.addWidget(self.label_xmin)
        # 将标签添加到水平布局中
        self.layoutWidget1 = QtWidgets.QWidget(self.frame_6)
        # 在第六个框架中创建另一个布局部件
        self.layoutWidget1.setGeometry(QtCore.QRect(210, 60, 161, 37))
        # 设置布局部件的几何形状：位置(210,60)，大小161x37
        self.layoutWidget1.setObjectName("layoutWidget1")
        # 设置布局部件的对象名
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.layoutWidget1)
        # 为布局部件创建一个水平布局
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        # 设置布局的内容边距为0
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        # 设置水平布局的对象名
        self.label_8 = QtWidgets.QLabel(self.layoutWidget1)
        # 在布局部件中创建一个标签
        self.label_8.setObjectName("label_8")
        # 设置标签的对象名
        self.horizontalLayout_2.addWidget(self.label_8)
        # 将标签添加到水平布局中
        self.label_ymin = QtWidgets.QLabel(self.layoutWidget1)
        # 在布局部件中创建另一个标签，用于显示y最小值
        palette = QtGui.QPalette()
        # 创建一个调色板对象
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        # 创建一个红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)
        # 设置画刷样式为实心图案
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        # 为活动状态的窗口文本设置红色画刷
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        # 再次创建一个红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)
        # 设置画刷样式为实心图案
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        # 为非活动状态的窗口文本设置红色画刷
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        # 创建一个灰色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)
        # 设置画刷样式为实心图案
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        # 为禁用状态的窗口文本设置灰色画刷
        self.label_ymin.setPalette(palette)
        # 为标签设置上面定义的调色板
        font = QtGui.QFont()
        # 创建一个新的字体对象
        font.setFamily("Arial")
        # 设置字体族为"Arial"
        font.setPointSize(16)
        # 设置字体大小为16点
        font.setBold(True)
        # 设置字体加粗
        font.setWeight(75)
        # 设置字体权重为75(加粗)
        self.label_ymin.setFont(font)
        # 为标签设置上面定义的字体
        self.label_ymin.setText("")
        # 设置标签的文本为空
        self.label_ymin.setObjectName("label_ymin")
        # 设置标签的对象名
        self.horizontalLayout_2.addWidget(self.label_ymin)
        # 将标签添加到水平布局中
        self.layoutWidget2 = QtWidgets.QWidget(self.frame_6)
        # 在第六个框架中创建另一个布局部件
        self.layoutWidget2.setGeometry(QtCore.QRect(20, 120, 161, 37))
        # 设置布局部件的几何形状：位置(20,120)，大小161x37
        self.layoutWidget2.setObjectName("layoutWidget2")
        # 设置布局部件的对象名
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.layoutWidget2)
        # 为布局部件创建一个水平布局
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        # 设置布局的内容边距为0
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        # 设置水平布局的对象名
        self.label_7 = QtWidgets.QLabel(self.layoutWidget2)
        # 在布局部件中创建一个标签
        self.label_7.setObjectName("label_7")
        # 设置标签的对象名
        self.horizontalLayout_3.addWidget(self.label_7)
        # 将标签添加到水平布局中
        self.label_xmax = QtWidgets.QLabel(self.layoutWidget2)


        palette = QtGui.QPalette()  # 创建一个调色板对象，用于设置UI元素的颜色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 创建一个红色的画刷对象
        brush.setStyle(QtCore.Qt.SolidPattern)  # 设置画刷的填充样式为实心
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)  # 为活动状态下的窗口文本设置红色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 再次创建一个红色的画刷对象
        brush.setStyle(QtCore.Qt.SolidPattern)  # 设置画刷的填充样式为实心
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)  # 为非活动状态下的窗口文本设置红色
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))  # 创建一个灰色的画刷对象
        brush.setStyle(QtCore.Qt.SolidPattern)  # 设置画刷的填充样式为实心
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)  # 为禁用状态下的窗口文本设置灰色
        self.label_xmin.setPalette(palette)  # 将调色板应用到xmin标签
        font = QtGui.QFont()  # 创建一个字体对象
        font.setFamily("Arial")  # 设置字体为Arial
        font.setPointSize(16)  # 设置字体大小为16点
        font.setBold(True)  # 设置字体为粗体
        font.setWeight(75)  # 设置字体粗细为75
        self.label_xmin.setFont(font)  # 将字体应用到xmin标签
        self.label_xmin.setText("")  # 设置xmin标签的文本为空
        self.label_xmin.setObjectName("label_xmin")  # 设置xmin标签的对象名称
        self.horizontalLayout.addWidget(self.label_xmin)  # 将xmin标签添加到水平布局中

        self.layoutWidget1 = QtWidgets.QWidget(self.frame_6)  # 在frame_6中创建一个布局控件
        self.layoutWidget1.setGeometry(QtCore.QRect(210, 60, 161, 37))  # 设置布局控件的位置和大小
        self.layoutWidget1.setObjectName("layoutWidget1")  # 设置布局控件的对象名称
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.layoutWidget1)  # 为布局控件创建一个水平布局
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)  # 设置布局的边距为0
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")  # 设置水平布局的对象名称
        self.label_8 = QtWidgets.QLabel(self.layoutWidget1)  # 在布局控件中创建一个标签
        self.label_8.setObjectName("label_8")  # 设置标签的对象名称
        self.horizontalLayout_2.addWidget(self.label_8)  # 将标签添加到水平布局中

        self.label_ymin = QtWidgets.QLabel(self.layoutWidget1)  # 在布局控件中创建ymin标签
        palette = QtGui.QPalette()  # 创建一个新的调色板对象
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 创建一个红色的画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 设置画刷为实心
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)  # 为活动状态下的窗口文本设置红色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 再次创建红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 设置为实心
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)  # 为非活动状态下的窗口文本设置红色
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))  # 创建灰色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 设置为实心
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)  # 为禁用状态下的窗口文本设置灰色
        self.label_ymin.setPalette(palette)  # 应用调色板到ymin标签

        font = QtGui.QFont()  # 创建新的字体对象
        font.setFamily("Arial")  # 设置为Arial字体
        font.setPointSize(16)  # 设置字体大小为16点
        font.setBold(True)  # 设置为粗体
        font.setWeight(75)  # 设置粗细为75
        self.label_ymin.setFont(font)  # 应用字体到ymin标签
        self.label_ymin.setText("")  # 设置ymin标签文本为空
        self.label_ymin.setObjectName("label_ymin")  # 设置对象名称
        self.horizontalLayout_2.addWidget(self.label_ymin)  # 将ymin标签添加到水平布局中

        self.layoutWidget2 = QtWidgets.QWidget(self.frame_6)  # 在frame_6中创建另一个布局控件
        self.layoutWidget2.setGeometry(QtCore.QRect(20, 120, 161, 37))  # 设置位置和大小
        self.layoutWidget2.setObjectName("layoutWidget2")  # 设置对象名称
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.layoutWidget2)  # 创建水平布局
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)  # 设置边距为0
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")  # 设置对象名称
        self.label_7 = QtWidgets.QLabel(self.layoutWidget2)  # 创建标签
        self.label_7.setObjectName("label_7")  # 设置对象名称
        self.horizontalLayout_3.addWidget(self.label_7)  # 将标签添加到布局中

        self.label_xmax = QtWidgets.QLabel(self.layoutWidget2)  # 创建xmax标签
        palette = QtGui.QPalette()  # 创建调色板
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)  # 活动状态为红色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)  # 非活动状态为红色
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))  # 灰色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)  # 禁用状态为灰色
        self.label_xmax.setPalette(palette)  # 应用调色板

        font = QtGui.QFont()  # 创建字体
        font.setFamily("Arial")  # 设置为Arial
        font.setPointSize(16)  # 16点大小
        font.setBold(True)  # 粗体
        font.setWeight(75)  # 粗细为75
        self.label_xmax.setFont(font)  # 应用字体
        self.label_xmax.setText("")  # 设置文本为空
        self.label_xmax.setObjectName("label_xmax")  # 设置对象名称
        self.horizontalLayout_3.addWidget(self.label_xmax)  # 添加到布局中

        self.layoutWidget3 = QtWidgets.QWidget(self.frame_6)  # 创建布局控件
        self.layoutWidget3.setGeometry(QtCore.QRect(210, 120, 161, 37))  # 设置位置和大小
        self.layoutWidget3.setObjectName("layoutWidget3")  # 设置对象名称
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.layoutWidget3)  # 创建水平布局
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)  # 设置边距为0
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")  # 设置对象名称
        self.label_9 = QtWidgets.QLabel(self.layoutWidget3)  # 创建标签
        self.label_9.setObjectName("label_9")  # 设置对象名称
        self.horizontalLayout_4.addWidget(self.label_9)  # 添加到布局中

        self.label_ymax = QtWidgets.QLabel(self.layoutWidget3)  # 创建ymax标签
        palette = QtGui.QPalette()  # 创建调色板
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)  # 活动状态为红色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)  # 非活动状态为红色
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))  # 灰色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)  # 禁用状态为灰色
        self.label_ymax.setPalette(palette)  # 应用调色板

        font = QtGui.QFont()  # 创建字体
        font.setFamily("Arial")  # 设置为Arial
        font.setPointSize(16)  # 16点大小
        font.setBold(True)  # 粗体
        font.setWeight(75)  # 粗细为75
        self.label_ymax.setFont(font)  # 应用字体
        self.label_ymax.setText("")  # 设置文本为空
        self.label_ymax.setObjectName("label_ymax")  # 设置对象名称
        self.horizontalLayout_4.addWidget(self.label_ymax)  # 添加到布局中

        self.layoutWidget4 = QtWidgets.QWidget(self.groupBox_2)  # 在groupBox_2中创建布局控件
        self.layoutWidget4.setGeometry(QtCore.QRect(208, 40, 211, 37))  # 设置位置和大小
        self.layoutWidget4.setObjectName("layoutWidget4")  # 设置对象名称
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.layoutWidget4)  # 创建水平布局
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)  # 设置边距为0
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")  # 设置对象名称
        self.label = QtWidgets.QLabel(self.layoutWidget4)  # 创建标签
        self.label.setObjectName("label")  # 设置对象名称
        self.horizontalLayout_5.addWidget(self.label)  # 添加到布局中

        self.label_nums = QtWidgets.QLabel(self.layoutWidget4)  # 创建显示目标数目的标签
        palette = QtGui.QPalette()  # 创建调色板
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)  # 活动状态窗口文本为红色
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))  # 黑色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)  # 活动状态文本为黑色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0, 128))  # 半透明红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)  # 活动状态占位符文本为半透明红色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)  # 非活动状态窗口文本为红色
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))  # 黑色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)  # 非活动状态文本为黑色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0, 128))  # 半透明红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)  # 非活动状态占位符文本为半透明红色
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))  # 灰色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)  # 禁用状态窗口文本为灰色
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))  # 灰色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)  # 禁用状态文本为灰色
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))  # 半透明黑色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)  # 禁用状态占位符文本为半透明黑色
        self.label_nums.setPalette(palette)  # 应用调色板

        font = QtGui.QFont()  # 创建字体
        font.setFamily("Arial")  # 设置为Arial
        font.setPointSize(16)  # 16点大小
        font.setBold(True)  # 粗体
        font.setWeight(75)  # 粗细为75
        self.label_nums.setFont(font)  # 应用字体
        self.label_nums.setText("")  # 设置文本为空
        self.label_nums.setObjectName("label_nums")  # 设置对象名称
        self.horizontalLayout_5.addWidget(self.label_nums)  # 添加到布局中

        self.layoutWidget5 = QtWidgets.QWidget(self.groupBox_2)  # 在groupBox_2中创建布局控件
        self.layoutWidget5.setGeometry(QtCore.QRect(10, 90, 291, 38))  # 设置位置和大小
        self.layoutWidget5.setObjectName("layoutWidget5")  # 设置对象名称
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.layoutWidget5)  # 创建水平布局
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)  # 设置边距为0
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")  # 设置对象名称
        self.label_5 = QtWidgets.QLabel(self.layoutWidget5)  # 创建标签
        self.label_5.setObjectName("label_5")  # 设置对象名称
        self.horizontalLayout_6.addWidget(self.label_5)  # 添加到布局中
        self.comboBox = QtWidgets.QComboBox(self.layoutWidget5)  # 创建下拉框，用于选择目标
        self.comboBox.setObjectName("comboBox")  # 设置对象名称
        self.horizontalLayout_6.addWidget(self.comboBox)  # 添加到布局中

        self.layoutWidget_2 = QtWidgets.QWidget(self.groupBox_2)  # 在groupBox_2中创建布局控件
        self.layoutWidget_2.setGeometry(QtCore.QRect(10, 40, 171, 37))  # 设置位置和大小
        self.layoutWidget_2.setObjectName("layoutWidget_2")  # 设置对象名称
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.layoutWidget_2)  # 创建水平布局
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)  # 设置边距为0
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")  # 设置对象名称
        self.label_10 = QtWidgets.QLabel(self.layoutWidget_2)  # 创建标签
        self.label_10.setObjectName("label_10")  # 设置对象名称
        self.horizontalLayout_7.addWidget(self.label_10)  # 添加到布局中

        self.time_lb = QtWidgets.QLabel(self.layoutWidget_2)  # 创建显示处理时间的标签
        palette = QtGui.QPalette()  # 创建调色板
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)  # 活动状态窗口文本为红色
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))  # 黑色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)  # 活动状态文本为黑色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0, 128))  # 半透明红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)  # 活动状态占位文本为半透明红色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)  # 非活动状态窗口文本为红色
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))  # 黑色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)  # 非活动状态文本为黑色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0, 128))  # 半透明红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)  # 非活动状态占位文本为半透明红色
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))  # 灰色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)  # 禁用状态窗口文本为灰色
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))  # 灰色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)  # 禁用状态文本为灰色
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))  # 半透明黑色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)  # 禁用状态占位文本为半透明黑色
        self.time_lb.setPalette(palette)  # 应用调色板

        font = QtGui.QFont()  # 创建字体
        font.setFamily("Arial")  # 设置为Arial
        font.setPointSize(16)  # 16点大小
        font.setBold(True)  # 粗体
        font.setWeight(75)  # 粗细为75
        self.time_lb.setFont(font)  # 应用字体
        self.time_lb.setText("")  # 设置文本为空
        self.time_lb.setObjectName("time_lb")  # 设置对象名称
        self.horizontalLayout_7.addWidget(self.time_lb)  # 添加到布局中

        self.layoutWidget6 = QtWidgets.QWidget(self.groupBox_2)  # 在groupBox_2中创建布局控件
        self.layoutWidget6.setGeometry(QtCore.QRect(210, 140, 191, 41))  # 设置位置和大小
        self.layoutWidget6.setObjectName("layoutWidget6")  # 设置对象名称
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.layoutWidget6)  # 创建水平布局
        self.horizontalLayout_8.setContentsMargins(0, 0, 0, 0)  # 设置边距为0
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")  # 设置对象名称
        self.label_11 = QtWidgets.QLabel(self.layoutWidget6)  # 创建标签
        self.label_11.setObjectName("label_11")  # 设置对象名称
        self.horizontalLayout_8.addWidget(self.label_11)  # 添加到布局中

        self.label_conf = QtWidgets.QLabel(self.layoutWidget6)  # 创建显示置信度的标签
        palette = QtGui.QPalette()  # 创建调色板
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)  # 活动状态窗口文本为红色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)  # 非活动状态窗口文本为红色
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))  # 灰色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)  # 禁用状态窗口文本为灰色
        self.label_conf.setPalette(palette)  # 应用调色板

        font = QtGui.QFont()  # 创建字体
        font.setFamily("Arial")  # 设置为Arial
        font.setPointSize(16)  # 16点大小
        font.setBold(True)  # 粗体
        font.setWeight(75)  # 粗细为75
        self.label_conf.setFont(font)  # 应用字体
        self.label_conf.setText("")  # 设置文本为空
        self.label_conf.setObjectName("label_conf")  # 设置对象名称
        self.horizontalLayout_8.addWidget(self.label_conf)  # 添加到布局中

        self.layoutWidget_3 = QtWidgets.QWidget(self.groupBox_2)  # 在groupBox_2中创建布局控件
        self.layoutWidget_3.setGeometry(QtCore.QRect(10, 140, 191, 41))  # 设置位置和大小
        self.layoutWidget_3.setObjectName("layoutWidget_3")  # 设置对象名称
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.layoutWidget_3)  # 创建水平布局
        self.horizontalLayout_9.setContentsMargins(0, 0, 0, 0)  # 设置边距为0
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")  # 设置对象名称
        self.label_13 = QtWidgets.QLabel(self.layoutWidget_3)  # 创建标签
        self.label_13.setMaximumSize(QtCore.QSize(60, 16777215))  # 设置最大尺寸
        self.label_13.setObjectName("label_13")  # 设置对象名称
        self.horizontalLayout_9.addWidget(self.label_13)  # 添加到布局中

        self.type_lb = QtWidgets.QLabel(self.layoutWidget_3)  # 创建显示类型的标签
        palette = QtGui.QPalette()  # 创建调色板
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)  # 活动状态窗口文本为红色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 红色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)  # 非活动状态窗口文本为红色
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))  # 灰色画刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 实心样式
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)  # 禁用状态窗口文本为灰色
        self.type_lb.setPalette(palette)  # 应用调色板

        font = QtGui.QFont()  # 创建字体
        font.setFamily("Arial")  # 设置为Arial
        font.setPointSize(16)  # 16点大小
        font.setBold(True)  # 粗体
        font.setWeight(75)  # 粗细为75
        self.label_conf.setFont(font)  # 设置label_conf标签的字体
        self.label_conf.setText("")  # 清空label_conf标签的文本内容
        self.label_conf.setObjectName("label_conf")  # 设置对象名称为"label_conf"，用于CSS样式和查找
        self.horizontalLayout_8.addWidget(self.label_conf)  # 将label_conf标签添加到水平布局horizontalLayout_8中

        self.layoutWidget_3 = QtWidgets.QWidget(self.groupBox_2)  # 在groupBox_2中创建一个新的部件容器
        self.layoutWidget_3.setGeometry(QtCore.QRect(10, 140, 191, 41))  # 设置layoutWidget_3的位置和大小
        self.layoutWidget_3.setObjectName("layoutWidget_3")  # 设置对象名称为"layoutWidget_3"

        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.layoutWidget_3)  # 为layoutWidget_3创建水平布局
        self.horizontalLayout_9.setContentsMargins(0, 0, 0, 0)  # 设置布局的边距为0
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")  # 设置布局的对象名称

        self.label_13 = QtWidgets.QLabel(self.layoutWidget_3)  # 在layoutWidget_3中创建标签
        self.label_13.setMaximumSize(QtCore.QSize(60, 16777215))  # 设置标签的最大宽度为60，高度不限
        self.label_13.setObjectName("label_13")  # 设置标签的对象名称
        self.horizontalLayout_9.addWidget(self.label_13)  # 将标签添加到水平布局中

        self.type_lb = QtWidgets.QLabel(self.layoutWidget_3)  # 创建类型标签
        palette = QtGui.QPalette()  # 创建调色板对象用于自定义颜色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 创建红色笔刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 设置笔刷为实心样式
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)  # 设置活动状态下的文本颜色为红色
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))  # 创建红色笔刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 设置笔刷为实心样式
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)  # 设置非活动状态下的文本颜色为红色
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))  # 创建灰色笔刷
        brush.setStyle(QtCore.Qt.SolidPattern)  # 设置笔刷为实心样式
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)  # 设置禁用状态下的文本颜色为灰色
        self.type_lb.setPalette(palette)  # 将调色板应用到type_lb标签

        font = QtGui.QFont()  # 创建新的字体对象
        font.setFamily("Arial")  # 设置字体为Arial
        font.setPointSize(16)  # 设置字号为16
        font.setBold(True)  # 设置为粗体
        font.setWeight(75)  # 设置字体权重为75（粗体）
        self.type_lb.setFont(font)  # 应用字体到type_lb标签
        self.type_lb.setText("")  # 清空type_lb标签的文本
        self.type_lb.setObjectName("type_lb")  # 设置对象名称
        self.horizontalLayout_9.addWidget(self.type_lb)  # 将标签添加到布局中

        self.groupBox_4 = QtWidgets.QGroupBox(self.frame_4)  # 在frame_4中创建组框
        self.groupBox_4.setGeometry(QtCore.QRect(0, 560, 431, 141))  # 设置组框位置和大小
        font = QtGui.QFont()  # 创建新的字体对象
        font.setFamily("华文楷体")  # 设置字体为华文楷体
        font.setPointSize(16)  # 设置字号为16
        self.groupBox_4.setFont(font)  # 应用字体到组框
        self.groupBox_4.setObjectName("groupBox_4")  # 设置对象名称

        self.SaveBtn = QtWidgets.QPushButton(self.groupBox_4)  # 在组框中创建保存按钮
        self.SaveBtn.setGeometry(QtCore.QRect(30, 50, 151, 51))  # 设置按钮位置和大小
        icon1 = QtGui.QIcon()  # 创建图标对象
        icon1.addPixmap(QtGui.QPixmap(":/icons/ui_imgs/icons/保存.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)  # 设置按钮图标
        self.SaveBtn.setIcon(icon1)  # 应用图标到按钮
        self.SaveBtn.setIconSize(QtCore.QSize(30, 30))  # 设置图标大小为30x30
        self.SaveBtn.setObjectName("SaveBtn")  # 设置对象名称

        self.ExitBtn = QtWidgets.QPushButton(self.groupBox_4)  # 在组框中创建退出按钮
        self.ExitBtn.setGeometry(QtCore.QRect(250, 50, 151, 51))  # 设置按钮位置和大小
        icon2 = QtGui.QIcon()  # 创建图标对象
        icon2.addPixmap(QtGui.QPixmap(":/icons/ui_imgs/icons/退出.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)  # 设置按钮图标
        self.ExitBtn.setIcon(icon2)  # 应用图标到按钮
        self.ExitBtn.setIconSize(QtCore.QSize(30, 30))  # 设置图标大小为30x30
        self.ExitBtn.setObjectName("ExitBtn")  # 设置对象名称

        self.frame_5 = QtWidgets.QFrame(self.centralwidget)  # 在centralwidget中创建框架
        self.frame_5.setGeometry(QtCore.QRect(10, 10, 1231, 91))  # 设置框架位置和大小
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)  # 设置框架形状为StylePanel样式
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)  # 设置框架阴影为凸起样式
        self.frame_5.setObjectName("frame_5")  # 设置对象名称

        self.label_3 = QtWidgets.QLabel(self.frame_5)  # 在框架中创建标签
        self.label_3.setGeometry(QtCore.QRect(240, 0, 811, 51))  # 设置标签位置和大小
        font = QtGui.QFont()  # 创建新的字体对象
        font.setFamily("华文楷体")  # 设置字体为华文楷体
        font.setPointSize(30)  # 设置字号为30
        self.label_3.setFont(font)  # 应用字体到标签
        self.label_3.setObjectName("label_3")  # 设置对象名称

        # 注释：label大小
        self.label_2 = QtWidgets.QLabel(self.frame_5)  # 在框架中创建标签
        self.label_2.setGeometry(QtCore.QRect(20, 60, 311, 21))  # 设置标签位置和大小
        font = QtGui.QFont()  # 创建新的字体对象
        font.setFamily("华文楷体")  # 设置字体为华文楷体
        font.setPointSize(14)  # 设置字号为14
        font.setUnderline(True)  # 设置字体为下划线
        self.label_2.setFont(font)  # 应用字体到标签
        self.label_2.setObjectName("label_2")  # 设置对象名称

        self.label_12 = QtWidgets.QLabel(self.frame_5)  # 在框架中创建标签
        self.label_12.setGeometry(QtCore.QRect(1070, 60, 131, 21))  # 设置标签位置和大小
        font = QtGui.QFont()  # 创建新的字体对象
        font.setFamily("华文楷体")  # 设置字体为华文楷体
        font.setPointSize(14)  # 设置字号为14
        font.setUnderline(True)  # 设置字体为下划线
        self.label_12.setFont(font)  # 应用字体到标签
        self.label_12.setObjectName("label_12")  # 设置对象名称

        MainWindow.setCentralWidget(self.centralwidget)  # 将centralwidget设置为MainWindow的中央部件

        self.statusbar = QtWidgets.QStatusBar(MainWindow)  # 创建状态栏
        self.statusbar.setObjectName("statusbar")  # 设置状态栏对象名称
        MainWindow.setStatusBar(self.statusbar)  # 将状态栏添加到MainWindow

        self.retranslateUi(MainWindow)  # 调用retranslateUi方法设置UI组件的翻译文本
        QtCore.QMetaObject.connectSlotsByName(MainWindow)  # 自动连接信号和槽

    """
    设置UI界面中所有控件的文本内容，为控件添加中文标签和提示文本

    Args:
        self: 当前UI类实例
        MainWindow: 主窗口对象
    """
def retranslateUi(self, MainWindow):
    # 获取QCoreApplication的translate函数，用于国际化/本地化字符串翻译
    _translate = QtCore.QCoreApplication.translate

    # 设置主窗口标题为"计科224李享哲-基于YOLOv8的头盔佩戴检测系统"
    MainWindow.setWindowTitle(_translate("MainWindow", "计科224李享哲-基于YOLOv8的头盔佩戴检测系统"))

    # 设置组框3的标题为"检测结果与位置信息"
    self.groupBox_3.setTitle(_translate("MainWindow", "检测结果与位置信息"))

    # 设置表格控件的水平表头项0的文本为"序号"
    item = self.tableWidget.horizontalHeaderItem(0)
    item.setText(_translate("MainWindow", "序号"))

    # 设置表格控件的水平表头项1的文本为"文件路径"
    item = self.tableWidget.horizontalHeaderItem(1)
    item.setText(_translate("MainWindow", "文件路径"))

    # 设置表格控件的水平表头项2的文本为"类别"
    item = self.tableWidget.horizontalHeaderItem(2)
    item.setText(_translate("MainWindow", "类别"))

    # 设置表格控件的水平表头项3的文本为"置信度"
    item = self.tableWidget.horizontalHeaderItem(3)
    item.setText(_translate("MainWindow", "置信度"))

    # 设置表格控件的水平表头项4的文本为"坐标位置"
    item = self.tableWidget.horizontalHeaderItem(4)
    item.setText(_translate("MainWindow", "坐标位置"))

    # 设置组框1的标题为"文件导入"
    self.groupBox.setTitle(_translate("MainWindow", "文件导入"))

    # 设置图片文件输入框的占位符文本为"请选择图片文件"
    self.PiclineEdit.setPlaceholderText(_translate("MainWindow", "请选择图片文件"))

    # 设置视频文件输入框的占位符文本为"请选择视频文件"
    self.VideolineEdit.setPlaceholderText(_translate("MainWindow", "请选择视频文件"))

    # 设置摄像头输入框的占位符文本为"摄像头未开启"
    self.CaplineEdit.setPlaceholderText(_translate("MainWindow", "摄像头未开启"))

    # 设置组框2的标题为"检测结果"
    self.groupBox_2.setTitle(_translate("MainWindow", "检测结果"))

    # 设置标签4的文本为"目标位置："，使用HTML格式使文本加粗显示
    self.label_4.setText(_translate("MainWindow",
                                    "<html><head/><body><p><span style=\" font-weight:600;\">目标位置：</span></p></body></html>"))

    # 设置标签6的文本为"xmin:"，使用HTML格式使文本加粗显示
    self.label_6.setText(_translate("MainWindow",
                                    "<html><head/><body><p><span style=\" font-weight:600;\">xmin:</span></p></body></html>"))

    # 设置标签8的文本为"ymin："，使用HTML格式使文本加粗显示
    self.label_8.setText(_translate("MainWindow",
                                    "<html><head/><body><p><span style=\" font-weight:600;\">ymin：</span></p></body></html>"))

    # 设置标签7的文本为"xmax："，使用HTML格式使文本加粗显示
    self.label_7.setText(_translate("MainWindow",
                                    "<html><head/><body><p><span style=\" font-weight:600;\">xmax：</span></p></body></html>"))

    # 设置标签9的文本为"ymax："，使用HTML格式使文本加粗显示
    self.label_9.setText(_translate("MainWindow",
                                    "<html><head/><body><p><span style=\" font-weight:600;\">ymax：</span></p></body></html>"))

    # 设置标签1的文本为"目标数目："，使用HTML格式使文本加粗显示
    self.label.setText(_translate("MainWindow",
                                  "<html><head/><body><p><span style=\" font-weight:600;\">目标数目：</span></p></body></html>"))

    # 设置标签5的文本为"目标选择："，使用HTML格式使文本加粗显示
    self.label_5.setText(_translate("MainWindow",
                                    "<html><head/><body><p><span style=\" font-weight:600;\">目标选择：</span></p></body></html>"))

    # 设置标签10的文本为"用时："，使用HTML格式使文本加粗显示
    self.label_10.setText(_translate("MainWindow",
                                     "<html><head/><body><p><span style=\" font-weight:600;\">用时：</span></p></body></html>"))

    # 设置标签11的文本为"置信度："，使用HTML格式使文本加粗显示
    self.label_11.setText(_translate("MainWindow",
                                     "<html><head/><body><p><span style=\" font-weight:600;\">置信度：</span></p></body></html>"))

    # 设置标签13的文本为"类型："，使用HTML格式使文本加粗显示
    self.label_13.setText(_translate("MainWindow",
                                     "<html><head/><body><p><span style=\" font-weight:600;\">类型：</span></p></body></html>"))

    # 设置组框4的标题为"操作"
    self.groupBox_4.setTitle(_translate("MainWindow", "操作"))

    # 设置保存按钮的文本为"保存"
    self.SaveBtn.setText(_translate("MainWindow", "保存"))

    # 设置退出按钮的文本为"退出"
    self.ExitBtn.setText(_translate("MainWindow", "退出"))

    # 设置标签3的文本为"基于YOLOv8的头盔佩戴检测系统"
    self.label_3.setText(_translate("MainWindow", "基于YOLOv8的头盔佩戴检测系统"))

    # 设置标签2的文本为GitHub链接
    self.label_2.setText(_translate("MainWindow", "github链接：https://github.com/izhe666"))

    # 设置标签12的文本为作者信息
    self.label_12.setText(_translate("MainWindow", "作者：izhe666"))